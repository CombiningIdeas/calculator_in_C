#ifndef MAIN
#define MAIN

/**
 * @file main.h
 * @brief Заголовочный файл с точкой входа и HTTP-обработчиком для сервера на базе Mongoose.
 *
 * Этот файл содержит объявления:
 * - Основной функции `main()`, запускающей HTTP-сервер с помощью библиотеки Mongoose.
 * - Вспомогательной функции `ev_handler()` — обработчика событий HTTP-запросов.
 *
 * Программа инициализирует Mongoose, запускает сервер на порту `7979` и обрабатывает HTTP-запросы:
 * - GET-запросы (`/api/get`)
 * - POST-запросы (`/api/post`)
 * - Отдача HTML-файлов (`/`)
 *
 * В случае некорректного маршрута клиенту возвращается ошибка 500.
 *
 * @see main.c
 */



/**
 * @brief Обработчик событий HTTP-соединения.
 *
 * Функция вызывается каждый раз, когда приходит новое HTTP-событие. Она:
 * - Обрабатывает GET- и POST-запросы к серверу.
 * - Обслуживает статические файлы из директории `frontend/`.
 * - Возвращает ошибку 500, если URI запроса не поддерживается.
 *
 * @param c Указатель на структуру соединения `mg_connection`.
 * @param ev Код события.
 * @param ev_data Указатель на данные события.
 *
 * @note Объявлена как `static`, чтобы ограничить область видимости текущим `.c`-файлом.
 */
static void ev_handler(struct mg_connection *c, int ev, void *ev_data);



/**
 * @brief Главная функция, запускающая HTTP-сервер.
 *
 * В функции выполняется:
 * - Проверка корректности размеров числовых типов через тесты.
 * - Инициализация менеджера событий библиотеки Mongoose.
 * - Настройка HTTP-сервера и запуск его на порту 7979.
 * - Запуск бесконечного цикла обработки событий.
 *
 * @return Код завершения:
 * - `0` — успешная работа.
 * - `1` — ошибка при запуске тестов.
 */
int main();

#endif